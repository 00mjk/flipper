"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[8788],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>c,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>s,withMDXComponents:()=>p});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return(a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e}).apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),p=function(e){return function(n){var t=s(n.components);return r.createElement(e,a({},n,{components:t}))}},s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},g=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),p=s(t),m=o,g=p["".concat(i,".").concat(m)]||p[m]||d[m]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=g;var l={};for(var u in n)hasOwnProperty.call(n,u)&&(l[u]=n[u]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}g.displayName="MDXCreateElement"},32482:(e,n,t)=>{t.r(n),t.d(n,{frontMatter:()=>l,contentTitle:()=>u,metadata:()=>c,toc:()=>p,default:()=>m});var r=t(87462),o=t(63366),a=(t(67294),t(3905)),i=["components"],l={id:"create-table-plugin",title:"Create Table Plugin"},u=void 0,c={unversionedId:"extending/create-table-plugin",id:"extending/create-table-plugin",isDocsHomePage:!1,title:"Create Table Plugin",description:"The following mechanism isn't supported yet by the Sandy plugin architecture.",source:"@site/../docs/extending/create-table-plugin.mdx",sourceDirName:"extending",slug:"/extending/create-table-plugin",permalink:"/docs/extending/create-table-plugin",editUrl:"https://github.com/facebook/flipper/blob/main/website/../docs/extending/create-table-plugin.mdx",version:"current",frontMatter:{id:"create-table-plugin",title:"Create Table Plugin"},sidebar:"extending",previous:{title:"Desktop Plugin API",permalink:"/docs/extending/js-plugin-api"},next:{title:"Searching and Filtering",permalink:"/docs/extending/search-and-filter"}},p=[],s={toc:p};function m(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.mdx)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,a.mdx)("div",{class:"warning"},(0,a.mdx)("p",null,"The following mechanism isn't supported yet by the Sandy plugin architecture.\nPlease remove ",(0,a.mdx)("inlineCode",{parentName:"p"},"flipper-plugin")," from the plugin dependencies if you want to use ",(0,a.mdx)("inlineCode",{parentName:"p"},"createTablePlugin"),".")),(0,a.mdx)("p",null,"A very common kind of Flipper plugin is a plugin which fetches some structured data from the device and presents it in a table."),(0,a.mdx)("p",null,"To make building these kinds of plugins as easy as possible we have created an abstraction we call ",(0,a.mdx)("inlineCode",{parentName:"p"},"createTablePlugin"),". This is a function which manages the complexities of building a table plugin but still allows you to customize many things to suite your needs."),(0,a.mdx)("p",null,"Below is a sample implementation of a desktop plugin based on ",(0,a.mdx)("inlineCode",{parentName:"p"},"createTablePlugin"),". It subscribes to updates from a client send using the ",(0,a.mdx)("inlineCode",{parentName:"p"},"newRow")," method. A row can have any structure you want as long as it has a unique field ",(0,a.mdx)("inlineCode",{parentName:"p"},"id")," of type ",(0,a.mdx)("inlineCode",{parentName:"p"},"string"),"."),(0,a.mdx)("p",null,'See "',(0,a.mdx)("a",{parentName:"p",href:"create-plugin"},"Create Plugin"),'" for how to create the native counterpart for your plugin.'),(0,a.mdx)("pre",null,(0,a.mdx)("code",{parentName:"pre",className:"language-tsx"},"import {ManagedDataInspector, Panel, Text, createTablePlugin} from 'flipper';\n\ntype Id = string;\n\ntype Row = {\n  id: Id,\n  column1: string,\n  column2: string,\n  column3: string,\n  extras: Object,\n};\n\nfunction buildRow(row: Row) {\n  return {\n    columns: {\n      column1: {\n        value: <Text>{row.column1}</Text>,\n        filterValue: row.column1,\n      },\n      column2: {\n        value: <Text>{row.column2}</Text>,\n        filterValue: row.column2,\n      },\n      column3: {\n        value: <Text>{row.column3}</Text>,\n        filterValue: row.column3,\n      },\n    },\n    key: row.id,\n    copyText: JSON.stringify(row),\n    filterValue: `${row.column1} ${row.column2} ${row.column3}`,\n  };\n}\n\nfunction renderSidebar(row: Row) {\n  return (\n    <Panel floating={false} heading={'Extras'}>\n      <ManagedDataInspector data={JSON.parse(row.extras)} expandRoot={true} />\n    </Panel>\n  );\n}\n\nconst columns = {\n  time: {\n    value: 'Column1',\n  },\n  module: {\n    value: 'Column2',\n  },\n  name: {\n    value: 'Column3',\n  },\n};\n\nconst columnSizes = {\n  time: '15%',\n  module: '20%',\n  name: 'flex',\n};\n\nexport default createTablePlugin({\n  method: 'newRow', // Method which should be subscribed to to get new rows with share Row (from above),\n  columns,\n  columnSizes,\n  renderSidebar,\n  buildRow,\n});\n")))}m.isMDXComponent=!0}}]);